-- Player Clone Script
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

-- Create GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "PlayerCloneGUI"
screenGui.ResetOnSpawn = false

-- Main frame
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 320, 0, 400)
mainFrame.Position = UDim2.new(0, 100, 0, 100)
mainFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 45)
mainFrame.BorderSizePixel = 0
mainFrame.BorderColor3 = Color3.fromRGB(80, 80, 120)
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.Parent = screenGui

-- Corner radius for modern look
local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 8)
corner.Parent = mainFrame

-- Title bar
local titleBar = Instance.new("Frame")
titleBar.Size = UDim2.new(1, 0, 0, 35)
titleBar.Position = UDim2.new(0, 0, 0, 0)
titleBar.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
titleBar.BorderSizePixel = 0
titleBar.Parent = mainFrame

local titleCorner = Instance.new("UICorner")
titleCorner.CornerRadius = UDim.new(0, 8)
titleCorner.Parent = titleBar

local title = Instance.new("TextLabel")
title.Size = UDim2.new(0.7, 0, 1, 0)
title.Position = UDim2.new(0.05, 0, 0, 0)
title.BackgroundTransparency = 1
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Text = "Player Clone GUI"
title.Font = Enum.Font.GothamBold
title.TextSize = 16
title.TextXAlignment = Enum.TextXAlignment.Left
title.Parent = titleBar

-- Minimize button
local minimizeButton = Instance.new("TextButton")
minimizeButton.Size = UDim2.new(0, 25, 0, 25)
minimizeButton.Position = UDim2.new(0.85, 0, 0.15, 0)
minimizeButton.BackgroundColor3 = Color3.fromRGB(60, 60, 80)
minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizeButton.Text = "-"
minimizeButton.Font = Enum.Font.GothamBold
minimizeButton.TextSize = 16
minimizeButton.Parent = titleBar

local minCorner = Instance.new("UICorner")
minCorner.CornerRadius = UDim.new(0, 4)
minCorner.Parent = minimizeButton

-- Content frame (will be hidden when minimized)
local contentFrame = Instance.new("Frame")
contentFrame.Size = UDim2.new(1, 0, 1, -35)
contentFrame.Position = UDim2.new(0, 0, 0, 35)
contentFrame.BackgroundTransparency = 1
contentFrame.Parent = mainFrame

-- Clone Me Button
local cloneButton = Instance.new("TextButton")
cloneButton.Size = UDim2.new(0.9, 0, 0, 45)
cloneButton.Position = UDim2.new(0.05, 0, 0.05, 0)
cloneButton.BackgroundColor3 = Color3.fromRGB(80, 120, 220)
cloneButton.TextColor3 = Color3.fromRGB(255, 255, 255)
cloneButton.Text = "üîÑ CLONE ME"
cloneButton.Font = Enum.Font.GothamBold
cloneButton.TextSize = 14
cloneButton.Parent = contentFrame

local cloneCorner = Instance.new("UICorner")
cloneCorner.CornerRadius = UDim.new(0, 6)
cloneCorner.Parent = cloneButton

-- Delete Clones Button
local deleteClonesButton = Instance.new("TextButton")
deleteClonesButton.Size = UDim2.new(0.9, 0, 0, 35)
deleteClonesButton.Position = UDim2.new(0.05, 0, 0.17, 0)
deleteClonesButton.BackgroundColor3 = Color3.fromRGB(220, 80, 80)
deleteClonesButton.TextColor3 = Color3.fromRGB(255, 255, 255)
deleteClonesButton.Text = "üóëÔ∏è DELETE ALL CLONES"
deleteClonesButton.Font = Enum.Font.GothamBold
deleteClonesButton.TextSize = 12
deleteClonesButton.Parent = contentFrame

local deleteCorner = Instance.new("UICorner")
deleteCorner.CornerRadius = UDim.new(0, 6)
deleteCorner.Parent = deleteClonesButton

-- Copy Player Section
local copyLabel = Instance.new("TextLabel")
copyLabel.Size = UDim2.new(0.9, 0, 0, 20)
copyLabel.Position = UDim2.new(0.05, 0, 0.3, 0)
copyLabel.BackgroundTransparency = 1
copyLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
copyLabel.Text = "COPY PLAYER APPEARANCE:"
copyLabel.Font = Enum.Font.Gotham
copyLabel.TextSize = 12
copyLabel.TextXAlignment = Enum.TextXAlignment.Left
copyLabel.Parent = contentFrame

-- Improved dropdown container
local dropdownContainer = Instance.new("Frame")
dropdownContainer.Size = UDim2.new(0.9, 0, 0, 35)
dropdownContainer.Position = UDim2.new(0.05, 0, 0.37, 0)
dropdownContainer.BackgroundTransparency = 1
dropdownContainer.Parent = contentFrame

local playerDropdown = Instance.new("Frame")
playerDropdown.Size = UDim2.new(1, 0, 0, 35)
playerDropdown.BackgroundColor3 = Color3.fromRGB(50, 50, 65)
playerDropdown.BorderSizePixel = 0
playerDropdown.Parent = dropdownContainer

local dropCorner = Instance.new("UICorner")
dropCorner.CornerRadius = UDim.new(0, 6)
dropCorner.Parent = playerDropdown

local dropdownButton = Instance.new("TextButton")
dropdownButton.Size = UDim2.new(1, 0, 1, 0)
dropdownButton.BackgroundTransparency = 1
dropdownButton.Text = "üë§ Select Player"
dropdownButton.TextColor3 = Color3.fromRGB(255, 255, 255)
dropdownButton.Font = Enum.Font.Gotham
dropdownButton.TextSize = 12
dropdownButton.Parent = playerDropdown

-- Fixed dropdown frame (positioned above to avoid covering other elements)
local dropdownFrame = Instance.new("ScrollingFrame")
dropdownFrame.Size = UDim2.new(1, 0, 0, 120)
dropdownFrame.Position = UDim2.new(0, 0, 0, -125) -- Positioned above the dropdown
dropdownFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 55)
dropdownFrame.BorderSizePixel = 0
dropdownFrame.Visible = false
dropdownFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
dropdownFrame.ScrollBarThickness = 4
dropdownFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
dropdownFrame.Parent = dropdownContainer

local dropFrameCorner = Instance.new("UICorner")
dropFrameCorner.CornerRadius = UDim.new(0, 6)
dropFrameCorner.Parent = dropdownFrame

local UIListLayout = Instance.new("UIListLayout")
UIListLayout.Padding = UDim.new(0, 2)
UIListLayout.Parent = dropdownFrame

local copyButton = Instance.new("TextButton")
copyButton.Size = UDim2.new(0.9, 0, 0, 45)
copyButton.Position = UDim2.new(0.05, 0, 0.52, 0)
copyButton.BackgroundColor3 = Color3.fromRGB(220, 100, 80)
copyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
copyButton.Text = "üé≠ COPY SELECTED PLAYER"
copyButton.Font = Enum.Font.GothamBold
copyButton.TextSize = 14
copyButton.Parent = contentFrame

local copyCorner = Instance.new("UICorner")
copyCorner.CornerRadius = UDim.new(0, 6)
copyCorner.Parent = copyButton

-- Status label
local statusLabel = Instance.new("TextLabel")
statusLabel.Size = UDim2.new(0.9, 0, 0, 70)
statusLabel.Position = UDim2.new(0.05, 0, 0.68, 0)
statusLabel.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
statusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
statusLabel.Text = "Status: Ready\nSelect an option above"
statusLabel.Font = Enum.Font.Gotham
statusLabel.TextSize = 12
statusLabel.TextWrapped = true
statusLabel.Parent = contentFrame

local statusCorner = Instance.new("UICorner")
statusCorner.CornerRadius = UDim.new(0, 6)
statusCorner.Parent = statusLabel

-- Close button
local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0.9, 0, 0, 35)
closeButton.Position = UDim2.new(0.05, 0, 0.88, 0)
closeButton.BackgroundColor3 = Color3.fromRGB(120, 40, 40)
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeButton.Text = "‚ùå CLOSE GUI"
closeButton.Font = Enum.Font.Gotham
closeButton.TextSize = 12
closeButton.Parent = contentFrame

local closeCorner = Instance.new("UICorner")
closeCorner.CornerRadius = UDim.new(0, 6)
closeCorner.Parent = closeButton

-- Insert GUI
screenGui.Parent = game:GetService("CoreGui") or game.Players.LocalPlayer:WaitForChild("PlayerGui")

-- Variables
local localPlayer = game.Players.LocalPlayer
local clonedCharacters = {}
local selectedPlayer = nil
local isMinimized = false

-- Function to create character clone (IMPROVED - better replication)
local function createCharacterClone(targetPlayer, isLocalPlayer)
    if not targetPlayer.Character then
        return nil
    end
    
    local originalChar = targetPlayer.Character
    local humanoidRootPart = originalChar:FindFirstChild("HumanoidRootPart")
    
    if not humanoidRootPart then
        return nil
    end
    
    -- Create the clone model
    local clone = Instance.new("Model")
    clone.Name = "PlayerClone_" .. tick() -- Unique name
    
    -- Get spawn position (slightly offset and dropped in place)
    local spawnCFrame = humanoidRootPart.CFrame * CFrame.new(math.random(-3, 3), 0, math.random(-3, 3))
    
    -- Copy humanoid
    local originalHumanoid = originalChar:FindFirstChildOfClass("Humanoid")
    if originalHumanoid then
        local humanoidClone = Instance.new("Humanoid")
        humanoidClone.HealthDisplayType = Enum.HealthDisplayType.AlwaysOff
        humanoidClone.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.None
        
        -- Copy humanoid properties
        humanoidClone.WalkSpeed = 0
        humanoidClone.JumpPower = 0
        humanoidClone.MaxHealth = originalHumanoid.MaxHealth
        humanoidClone.Health = originalHumanoid.Health
        humanoidClone.Parent = clone
        
        -- Copy animations if they exist
        if originalHumanoid.Animator then
            local animator = Instance.new("Animator")
            animator.Parent = humanoidClone
        end
    end
    
    -- Copy all parts with proper replication
    for _, part in ipairs(originalChar:GetChildren()) do
        if part:IsA("BasePart") then
            local partClone = part:Clone()
            
            -- Make parts non-collidable but NOT anchored (better replication)
            partClone.CanCollide = false
            partClone.Anchored = false
            
            -- Set position
            if part.Name == "HumanoidRootPart" then
                partClone.CFrame = spawnCFrame
                partClone.Velocity = Vector3.new(0, 0, 0)
                partClone.RotVelocity = Vector3.new(0, 0, 0)
            else
                local relativeCFrame = originalChar:GetPrimaryPartCFrame():ToObjectSpace(part.CFrame)
                partClone.CFrame = spawnCFrame:ToWorldSpace(relativeCFrame)
            end
            
            partClone.Parent = clone
            
            -- Add BodyVelocity to keep in place without anchoring
            local bodyVelocity = Instance.new("BodyVelocity")
            bodyVelocity.Velocity = Vector3.new(0, 0, 0)
            bodyVelocity.MaxForce = Vector3.new(40000, 40000, 40000)
            bodyVelocity.P = 1000
            bodyVelocity.Parent = partClone
            
            -- Add BodyGyro to maintain rotation
            local bodyGyro = Instance.new("BodyGyro")
            bodyGyro.MaxTorque = Vector3.new(40000, 40000, 40000)
            bodyGyro.P = 1000
            bodyGyro.CFrame = partClone.CFrame
            bodyGyro.Parent = partClone
        elseif part:IsA("Accoutrement") or part:IsA("CharacterMesh") or part:IsA("Clothing") then
            local partClone = part:Clone()
            partClone.Parent = clone
        end
    end
    
    -- Set primary part
    local cloneRoot = clone:FindFirstChild("HumanoidRootPart")
    if cloneRoot then
        clone.PrimaryPart = cloneRoot
        
        -- Force network ownership to server for better replication
        spawn(function()
            wait(0.1)
            if cloneRoot and cloneRoot:IsDescendantOf(workspace) then
                cloneRoot:SetNetworkOwner(nil)
            end
        end)
    end
    
    -- Parent to workspace so everyone can see it
    clone.Parent = workspace
    
    -- Force replication by changing properties
    spawn(function()
        wait(0.2)
        if cloneRoot then
            cloneRoot.Transparency = 0
        end
    end)
    
    table.insert(clonedCharacters, {
        Model = clone,
        CreatedAt = tick()
    })
    
    -- Clean up after 10 minutes to prevent lag
    delay(600, function()
        if clone and clone.Parent then
            clone:Destroy()
        end
    end)
    
    return clone
end

-- Function to delete all clones
local function deleteAllClones()
    local deletedCount = 0
    for i, cloneData in ipairs(clonedCharacters) do
        if cloneData.Model and cloneData.Model.Parent then
            cloneData.Model:Destroy()
            deletedCount = deletedCount + 1
        end
    end
    clonedCharacters = {}
    
    -- Also clean up any remaining clones in workspace
    for _, obj in ipairs(workspace:GetChildren()) do
        if obj:IsA("Model") and obj.Name:find("PlayerClone_") then
            obj:Destroy()
            deletedCount = deletedCount + 1
        end
    end
    
    return deletedCount
end

-- Function to update players list
local function updatePlayersList()
    -- Clear existing buttons
    for _, child in ipairs(dropdownFrame:GetChildren()) do
        if child:IsA("TextButton") then
            child:Destroy()
        end
    end
    
    -- Add players to dropdown
    for i, player in ipairs(game.Players:GetPlayers()) do
        if player ~= localPlayer then
            local playerButton = Instance.new("TextButton")
            playerButton.Size = UDim2.new(1, 0, 0, 30)
            playerButton.BackgroundColor3 = Color3.fromRGB(60, 60, 80)
            playerButton.BorderSizePixel = 0
            playerButton.Text = "üë§ " .. player.Name
            playerButton.TextColor3 = Color3.fromRGB(255, 255, 255)
            playerButton.Font = Enum.Font.Gotham
            playerButton.TextSize = 12
            playerButton.Parent = dropdownFrame
            
            local btnCorner = Instance.new("UICorner")
            btnCorner.CornerRadius = UDim.new(0, 4)
            btnCorner.Parent = playerButton
            
            playerButton.MouseButton1Click:Connect(function()
                selectedPlayer = player
                dropdownButton.Text = "üë§ " .. player.Name
                dropdownFrame.Visible = false
                statusLabel.Text = "Selected: " .. player.Name .. "\nReady to copy appearance!"
            end)
        end
    end
    
    -- Update dropdown text if no players available
    if #game.Players:GetPlayers() <= 1 then
        dropdownButton.Text = "üë§ No other players"
        selectedPlayer = nil
    end
end

-- Function to copy player appearance (SERVER-SIDE VISIBLE)
local function copyPlayerAppearance(targetPlayer)
    if not targetPlayer or not targetPlayer.Character or not localPlayer.Character then
        statusLabel.Text = "Error: Characters not loaded"
        return false
    end
    
    local targetChar = targetPlayer.Character
    local localChar = localPlayer.Character
    
    -- Wait for characters to fully load
    if not targetChar:FindFirstChild("Humanoid") or not localChar:FindFirstChild("Humanoid") then
        statusLabel.Text = "Error: Characters not fully loaded"
        return false
    end
    
    -- Use a remote event for better server-side replication
    local success = pcall(function()
        -- Remove existing clothing/accessories from local character
        for _, item in ipairs(localChar:GetChildren()) do
            if item:IsA("Accoutrement") or item:IsA("Clothing") or item:IsA("CharacterMesh") then
                item:Destroy()
            end
        end
        
        -- Copy appearance items from target player
        for _, item in ipairs(targetChar:GetChildren()) do
            if item:IsA("Accoutrement") or item:IsA("Clothing") or item:IsA("CharacterMesh") then
                local clone = item:Clone()
                clone.Parent = localChar
            end
        end
        
        -- Copy body colors
        local targetHumanoid = targetChar:FindFirstChildOfClass("Humanoid")
        local localHumanoid = localChar:FindFirstChildOfClass("Humanoid")
        
        if targetHumanoid and localHumanoid and targetHumanoid:FindFirstChild("BodyColors") then
            local targetColors = targetHumanoid.BodyColors
            local newColors = targetColors:Clone()
            
            -- Remove existing body colors
            if localHumanoid:FindFirstChild("BodyColors") then
                localHumanoid.BodyColors:Destroy()
            end
            
            newColors.Parent = localHumanoid
        end
    end)
    
    return success
end

-- Toggle minimize function
local function toggleMinimize()
    if isMinimized then
        -- Restore
        contentFrame.Visible = true
        mainFrame.Size = UDim2.new(0, 320, 0, 400)
        minimizeButton.Text = "-"
        isMinimized = false
    else
        -- Minimize
        contentFrame.Visible = false
        mainFrame.Size = UDim2.new(0, 320, 0, 35)
        minimizeButton.Text = "+"
        isMinimized = true
    end
end

-- Connect events
cloneButton.MouseButton1Click:Connect(function()
    if localPlayer.Character then
        local clone = createCharacterClone(localPlayer, true)
        if clone then
            local pos = clone:GetPivot().Position
            statusLabel.Text = "‚úÖ Clone created!\nPosition: " .. math.floor(pos.X) .. ", " .. math.floor(pos.Y) .. ", " .. math.floor(pos.Z) .. "\nEveryone can see it!\nTotal clones: " .. #clonedCharacters
        else
            statusLabel.Text = "‚ùå Failed to create clone\nMake sure your character is loaded"
        end
    else
        statusLabel.Text = "‚ùå Error: Your character not loaded"
    end
end)

deleteClonesButton.MouseButton1Click:Connect(function()
    local deletedCount = deleteAllClones()
    statusLabel.Text = "üóëÔ∏è Deleted " .. deletedCount .. " clones\nAll clones removed from server!"
end)

dropdownButton.MouseButton1Click:Connect(function()
    updatePlayersList()
    dropdownFrame.Visible = not dropdownFrame.Visible
end)

copyButton.MouseButton1Click:Connect(function()
    if selectedPlayer then
        local success = copyPlayerAppearance(selectedPlayer)
        if success then
            statusLabel.Text = "‚úÖ Copied appearance of: " .. selectedPlayer.Name .. "\nChanges should be server-side visible!\nOther players should see you as " .. selectedPlayer.Name
        else
            statusLabel.Text = "‚ùå Failed to copy appearance\nTry again or select another player"
        end
    else
        statusLabel.Text = "‚ö†Ô∏è Please select a player first\nClick the dropdown above"
    end
end)

minimizeButton.MouseButton1Click:Connect(toggleMinimize)

closeButton.MouseButton1Click:Connect(function()
    screenGui:Destroy()
end)

-- Close dropdown when clicking outside
UserInputService.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        if dropdownFrame.Visible then
            dropdownFrame.Visible = false
        end
    end
end)

-- Auto-refresh players list
game.Players.PlayerAdded:Connect(updatePlayersList)
game.Players.PlayerRemoving:Connect(updatePlayersList)

-- Initial update
updatePlayersList()

statusLabel.Text = "‚úÖ GUI Loaded!\n‚Ä¢ Clone Me: Creates server-side clone\n‚Ä¢ Delete Clones: Removes all clones\n‚Ä¢ Copy Player: Copies appearance"

print("üéÆ Player Clone GUI loaded successfully!")
print("‚ú® Features:")
print("   ‚Ä¢ CLONE ME: Creates server-side visible clones")
print("   ‚Ä¢ DELETE CLONES: Removes all created clones")
print("   ‚Ä¢ COPY PLAYER: Copies player appearance")
print("   ‚Ä¢ Fixed dropdown menu")
print("   ‚Ä¢ Works in most Roblox games")
